generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(uuid())
  username     String?      @unique
  name         String?
  email        String       @unique
  provider     AuthProvider
  password     String?
  rating       Int          @default(850)
  createdAt    DateTime     @default(now())
  lastLogin    DateTime?
  gamesAsBlack Game[]       @relation("GamesAsBlack")
  gamesAsWhite Game[]       @relation("GamesAsWhite")

  @@index([rating])
}

model Game {
  id            String      @id @default(uuid())
  whitePlayerId String
  blackPlayerId String
  status        GameStatus
  result        GameResult?
  timeControl   TimeControl
  startingFen   String      @default("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1")
  currentFen    String?
  startAt       DateTime    @default(now())
  endAt         DateTime?
  opening       String?
  event         String?
  blackPlayer   User        @relation("GamesAsBlack", fields: [blackPlayerId], references: [id])
  whitePlayer   User        @relation("GamesAsWhite", fields: [whitePlayerId], references: [id])
  moves         Move[]

  @@index([status, result])
}

model Move {
  id         String   @id @default(uuid())
  gameId     String
  moveNumber Int
  from       String
  to         String
  comments   String?
  before     String
  after      String
  timeTaken  Int?     @default(0)
  createdAt  DateTime @default(now())
  san        String?
  game       Game     @relation(fields: [gameId], references: [id])

  @@index([gameId])
}

enum GameStatus {
  IN_PROGRESS
  COMPLETED
  ABANDONED
  TIME_UP
  PLAYER_EXIT
}

enum GameResult {
  WHITE_WINS
  BLACK_WINS
  DRAW
}

enum TimeControl {
  CLASSICAL
  RAPID
  BLITZ
  BULLET
}

enum AuthProvider {
  EMAIL
  GOOGLE
  GITHUB
  GUEST
}
